{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.utils = exports.PublicKey = exports.PrivateKey = exports.decrypt = exports.encrypt = void 0;\n\nvar keys_1 = require(\"./keys\");\n\nvar utils_1 = require(\"./utils\");\n\nvar consts_1 = require(\"./consts\");\n\nfunction encrypt(receiverRawPK, msg) {\n  var ephemeralKey = new keys_1.PrivateKey();\n  var receiverPK = receiverRawPK instanceof Buffer ? new keys_1.PublicKey(receiverRawPK) : keys_1.PublicKey.fromHex(receiverRawPK);\n  var aesKey = ephemeralKey.encapsulate(receiverPK);\n  var encrypted = (0, utils_1.aesEncrypt)(aesKey, msg);\n  return Buffer.concat([ephemeralKey.publicKey.uncompressed, encrypted]);\n}\n\nexports.encrypt = encrypt;\n\nfunction decrypt(receiverRawSK, msg) {\n  var receiverSK = receiverRawSK instanceof Buffer ? new keys_1.PrivateKey(receiverRawSK) : keys_1.PrivateKey.fromHex(receiverRawSK);\n  var senderPubkey = new keys_1.PublicKey(msg.slice(0, consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE));\n  var encrypted = msg.slice(consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE);\n  var aesKey = senderPubkey.decapsulate(receiverSK);\n  return (0, utils_1.aesDecrypt)(aesKey, encrypted);\n}\n\nexports.decrypt = decrypt;\n\nvar keys_2 = require(\"./keys\"); //const { log } = require(\"console\");\n\n\nObject.defineProperty(exports, \"PrivateKey\", {\n  enumerable: true,\n  get: function () {\n    return keys_2.PrivateKey;\n  }\n});\nObject.defineProperty(exports, \"PublicKey\", {\n  enumerable: true,\n  get: function () {\n    return keys_2.PublicKey;\n  }\n});\nexports.utils = {\n  aesDecrypt: utils_1.aesDecrypt,\n  aesEncrypt: utils_1.aesEncrypt,\n  decodeHex: utils_1.decodeHex,\n  getValidSecret: utils_1.getValidSecret,\n  remove0x: utils_1.remove0x\n};","map":{"version":3,"sources":["C:/Users/abhi/Desktop/etherium/endproject/Device/Device 3/node_modules/eciesjs/dist/index.js"],"names":["Object","defineProperty","exports","value","utils","PublicKey","PrivateKey","decrypt","encrypt","keys_1","require","utils_1","consts_1","receiverRawPK","msg","ephemeralKey","receiverPK","Buffer","fromHex","aesKey","encapsulate","encrypted","aesEncrypt","concat","publicKey","uncompressed","receiverRawSK","receiverSK","senderPubkey","slice","UNCOMPRESSED_PUBLIC_KEY_SIZE","decapsulate","aesDecrypt","keys_2","enumerable","get","decodeHex","getValidSecret","remove0x"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,UAAR,GAAqBJ,OAAO,CAACK,OAAR,GAAkBL,OAAO,CAACM,OAAR,GAAkB,KAAK,CAAlG;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,SAASF,OAAT,CAAiBK,aAAjB,EAAgCC,GAAhC,EAAqC;AACjC,MAAIC,YAAY,GAAG,IAAIN,MAAM,CAACH,UAAX,EAAnB;AACA,MAAIU,UAAU,GAAGH,aAAa,YAAYI,MAAzB,GACX,IAAIR,MAAM,CAACJ,SAAX,CAAqBQ,aAArB,CADW,GAEXJ,MAAM,CAACJ,SAAP,CAAiBa,OAAjB,CAAyBL,aAAzB,CAFN;AAGA,MAAIM,MAAM,GAAGJ,YAAY,CAACK,WAAb,CAAyBJ,UAAzB,CAAb;AACA,MAAIK,SAAS,GAAG,CAAC,GAAGV,OAAO,CAACW,UAAZ,EAAwBH,MAAxB,EAAgCL,GAAhC,CAAhB;AACA,SAAOG,MAAM,CAACM,MAAP,CAAc,CAACR,YAAY,CAACS,SAAb,CAAuBC,YAAxB,EAAsCJ,SAAtC,CAAd,CAAP;AACH;;AACDnB,OAAO,CAACM,OAAR,GAAkBA,OAAlB;;AACA,SAASD,OAAT,CAAiBmB,aAAjB,EAAgCZ,GAAhC,EAAqC;AACjC,MAAIa,UAAU,GAAGD,aAAa,YAAYT,MAAzB,GACX,IAAIR,MAAM,CAACH,UAAX,CAAsBoB,aAAtB,CADW,GAEXjB,MAAM,CAACH,UAAP,CAAkBY,OAAlB,CAA0BQ,aAA1B,CAFN;AAGA,MAAIE,YAAY,GAAG,IAAInB,MAAM,CAACJ,SAAX,CAAqBS,GAAG,CAACe,KAAJ,CAAU,CAAV,EAAajB,QAAQ,CAACkB,4BAAtB,CAArB,CAAnB;AACA,MAAIT,SAAS,GAAGP,GAAG,CAACe,KAAJ,CAAUjB,QAAQ,CAACkB,4BAAnB,CAAhB;AACA,MAAIX,MAAM,GAAGS,YAAY,CAACG,WAAb,CAAyBJ,UAAzB,CAAb;AACA,SAAO,CAAC,GAAGhB,OAAO,CAACqB,UAAZ,EAAwBb,MAAxB,EAAgCE,SAAhC,CAAP;AACH;;AACDnB,OAAO,CAACK,OAAR,GAAkBA,OAAlB;;AACA,IAAI0B,MAAM,GAAGvB,OAAO,CAAC,QAAD,CAApB,C,CACA;;;AACAV,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEgC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOF,MAAM,CAAC3B,UAAd;AAA2B;AAAlE,CAA7C;AACAN,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,WAA/B,EAA4C;AAAEgC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOF,MAAM,CAAC5B,SAAd;AAA0B;AAAjE,CAA5C;AACAH,OAAO,CAACE,KAAR,GAAgB;AACZ4B,EAAAA,UAAU,EAAErB,OAAO,CAACqB,UADR;AAEZV,EAAAA,UAAU,EAAEX,OAAO,CAACW,UAFR;AAGZc,EAAAA,SAAS,EAAEzB,OAAO,CAACyB,SAHP;AAIZC,EAAAA,cAAc,EAAE1B,OAAO,CAAC0B,cAJZ;AAKZC,EAAAA,QAAQ,EAAE3B,OAAO,CAAC2B;AALN,CAAhB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.PublicKey = exports.PrivateKey = exports.decrypt = exports.encrypt = void 0;\nvar keys_1 = require(\"./keys\");\nvar utils_1 = require(\"./utils\");\nvar consts_1 = require(\"./consts\");\nfunction encrypt(receiverRawPK, msg) {\n    var ephemeralKey = new keys_1.PrivateKey();\n    var receiverPK = receiverRawPK instanceof Buffer\n        ? new keys_1.PublicKey(receiverRawPK)\n        : keys_1.PublicKey.fromHex(receiverRawPK);\n    var aesKey = ephemeralKey.encapsulate(receiverPK);\n    var encrypted = (0, utils_1.aesEncrypt)(aesKey, msg);\n    return Buffer.concat([ephemeralKey.publicKey.uncompressed, encrypted]);\n}\nexports.encrypt = encrypt;\nfunction decrypt(receiverRawSK, msg) {\n    var receiverSK = receiverRawSK instanceof Buffer\n        ? new keys_1.PrivateKey(receiverRawSK)\n        : keys_1.PrivateKey.fromHex(receiverRawSK);\n    var senderPubkey = new keys_1.PublicKey(msg.slice(0, consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE));\n    var encrypted = msg.slice(consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE);\n    var aesKey = senderPubkey.decapsulate(receiverSK);\n    return (0, utils_1.aesDecrypt)(aesKey, encrypted);\n}\nexports.decrypt = decrypt;\nvar keys_2 = require(\"./keys\");\n//const { log } = require(\"console\");\nObject.defineProperty(exports, \"PrivateKey\", { enumerable: true, get: function () { return keys_2.PrivateKey; } });\nObject.defineProperty(exports, \"PublicKey\", { enumerable: true, get: function () { return keys_2.PublicKey; } });\nexports.utils = {\n    aesDecrypt: utils_1.aesDecrypt,\n    aesEncrypt: utils_1.aesEncrypt,\n    decodeHex: utils_1.decodeHex,\n    getValidSecret: utils_1.getValidSecret,\n    remove0x: utils_1.remove0x,\n};\n"]},"metadata":{},"sourceType":"script"}