{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar futoin_hkdf_1 = __importDefault(require(\"futoin-hkdf\"));\n\nvar secp256k1_1 = __importDefault(require(\"secp256k1\"));\n\nvar utils_1 = require(\"../utils\");\n\nvar PublicKey_1 = __importDefault(require(\"./PublicKey\"));\n\nvar PrivateKey =\n/** @class */\nfunction () {\n  function PrivateKey(secret) {\n    this.secret = secret || (0, utils_1.getValidSecret)();\n\n    if (!secp256k1_1.default.privateKeyVerify(this.secret)) {\n      throw new Error(\"Invalid private key\");\n    }\n\n    this.publicKey = new PublicKey_1.default(Buffer.from(secp256k1_1.default.publicKeyCreate(this.secret)));\n  }\n\n  PrivateKey.fromHex = function (hex) {\n    return new PrivateKey((0, utils_1.decodeHex)(hex));\n  };\n\n  PrivateKey.prototype.toHex = function () {\n    return \"0x\".concat(this.secret.toString(\"hex\"));\n  };\n\n  PrivateKey.prototype.encapsulate = function (pub) {\n    var master = Buffer.concat([this.publicKey.uncompressed, this.multiply(pub)]);\n    return (0, futoin_hkdf_1.default)(master, 32, {\n      hash: \"SHA-256\"\n    });\n  };\n\n  PrivateKey.prototype.multiply = function (pub) {\n    return Buffer.from(secp256k1_1.default.publicKeyTweakMul(pub.compressed, this.secret, false));\n  };\n\n  PrivateKey.prototype.equals = function (other) {\n    return this.secret.equals(other.secret);\n  };\n\n  return PrivateKey;\n}();\n\nexports.default = PrivateKey;","map":{"version":3,"sources":["C:/Users/abhi/Desktop/etherium/endproject/Device/Device 5/node_modules/eciesjs/dist/keys/PrivateKey.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","futoin_hkdf_1","require","secp256k1_1","utils_1","PublicKey_1","PrivateKey","secret","getValidSecret","default","privateKeyVerify","Error","publicKey","Buffer","from","publicKeyCreate","fromHex","hex","decodeHex","prototype","toHex","concat","toString","encapsulate","pub","master","uncompressed","multiply","hash","publicKeyTweakMul","compressed","equals","other"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,aAAa,GAAGP,eAAe,CAACQ,OAAO,CAAC,aAAD,CAAR,CAAnC;;AACA,IAAIC,WAAW,GAAGT,eAAe,CAACQ,OAAO,CAAC,WAAD,CAAR,CAAjC;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIG,WAAW,GAAGX,eAAe,CAACQ,OAAO,CAAC,aAAD,CAAR,CAAjC;;AACA,IAAII,UAAU;AAAG;AAAe,YAAY;AACxC,WAASA,UAAT,CAAoBC,MAApB,EAA4B;AACxB,SAAKA,MAAL,GAAcA,MAAM,IAAI,CAAC,GAAGH,OAAO,CAACI,cAAZ,GAAxB;;AACA,QAAI,CAACL,WAAW,CAACM,OAAZ,CAAoBC,gBAApB,CAAqC,KAAKH,MAA1C,CAAL,EAAwD;AACpD,YAAM,IAAII,KAAJ,CAAU,qBAAV,CAAN;AACH;;AACD,SAAKC,SAAL,GAAiB,IAAIP,WAAW,CAACI,OAAhB,CAAwBI,MAAM,CAACC,IAAP,CAAYX,WAAW,CAACM,OAAZ,CAAoBM,eAApB,CAAoC,KAAKR,MAAzC,CAAZ,CAAxB,CAAjB;AACH;;AACDD,EAAAA,UAAU,CAACU,OAAX,GAAqB,UAAUC,GAAV,EAAe;AAChC,WAAO,IAAIX,UAAJ,CAAe,CAAC,GAAGF,OAAO,CAACc,SAAZ,EAAuBD,GAAvB,CAAf,CAAP;AACH,GAFD;;AAGAX,EAAAA,UAAU,CAACa,SAAX,CAAqBC,KAArB,GAA6B,YAAY;AACrC,WAAO,KAAKC,MAAL,CAAY,KAAKd,MAAL,CAAYe,QAAZ,CAAqB,KAArB,CAAZ,CAAP;AACH,GAFD;;AAGAhB,EAAAA,UAAU,CAACa,SAAX,CAAqBI,WAArB,GAAmC,UAAUC,GAAV,EAAe;AAC9C,QAAIC,MAAM,GAAGZ,MAAM,CAACQ,MAAP,CAAc,CACvB,KAAKT,SAAL,CAAec,YADQ,EAEvB,KAAKC,QAAL,CAAcH,GAAd,CAFuB,CAAd,CAAb;AAIA,WAAO,CAAC,GAAGvB,aAAa,CAACQ,OAAlB,EAA2BgB,MAA3B,EAAmC,EAAnC,EAAuC;AAC1CG,MAAAA,IAAI,EAAE;AADoC,KAAvC,CAAP;AAGH,GARD;;AASAtB,EAAAA,UAAU,CAACa,SAAX,CAAqBQ,QAArB,GAAgC,UAAUH,GAAV,EAAe;AAC3C,WAAOX,MAAM,CAACC,IAAP,CAAYX,WAAW,CAACM,OAAZ,CAAoBoB,iBAApB,CAAsCL,GAAG,CAACM,UAA1C,EAAsD,KAAKvB,MAA3D,EAAmE,KAAnE,CAAZ,CAAP;AACH,GAFD;;AAGAD,EAAAA,UAAU,CAACa,SAAX,CAAqBY,MAArB,GAA8B,UAAUC,KAAV,EAAiB;AAC3C,WAAO,KAAKzB,MAAL,CAAYwB,MAAZ,CAAmBC,KAAK,CAACzB,MAAzB,CAAP;AACH,GAFD;;AAGA,SAAOD,UAAP;AACH,CA9B+B,EAAhC;;AA+BAP,OAAO,CAACU,OAAR,GAAkBH,UAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar futoin_hkdf_1 = __importDefault(require(\"futoin-hkdf\"));\nvar secp256k1_1 = __importDefault(require(\"secp256k1\"));\nvar utils_1 = require(\"../utils\");\nvar PublicKey_1 = __importDefault(require(\"./PublicKey\"));\nvar PrivateKey = /** @class */ (function () {\n    function PrivateKey(secret) {\n        this.secret = secret || (0, utils_1.getValidSecret)();\n        if (!secp256k1_1.default.privateKeyVerify(this.secret)) {\n            throw new Error(\"Invalid private key\");\n        }\n        this.publicKey = new PublicKey_1.default(Buffer.from(secp256k1_1.default.publicKeyCreate(this.secret)));\n    }\n    PrivateKey.fromHex = function (hex) {\n        return new PrivateKey((0, utils_1.decodeHex)(hex));\n    };\n    PrivateKey.prototype.toHex = function () {\n        return \"0x\".concat(this.secret.toString(\"hex\"));\n    };\n    PrivateKey.prototype.encapsulate = function (pub) {\n        var master = Buffer.concat([\n            this.publicKey.uncompressed,\n            this.multiply(pub),\n        ]);\n        return (0, futoin_hkdf_1.default)(master, 32, {\n            hash: \"SHA-256\",\n        });\n    };\n    PrivateKey.prototype.multiply = function (pub) {\n        return Buffer.from(secp256k1_1.default.publicKeyTweakMul(pub.compressed, this.secret, false));\n    };\n    PrivateKey.prototype.equals = function (other) {\n        return this.secret.equals(other.secret);\n    };\n    return PrivateKey;\n}());\nexports.default = PrivateKey;\n"]},"metadata":{},"sourceType":"script"}